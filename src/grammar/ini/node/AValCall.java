/* This file was generated by SableCC (http://www.sablecc.org/). */

package grammar.ini.node;

import grammar.ini.analysis.*;

@SuppressWarnings("nls")
public final class AValCall extends PCall
{
    private PVal _val_;

    public AValCall()
    {
        // Constructor
    }

    public AValCall(
        @SuppressWarnings("hiding") PVal _val_)
    {
        // Constructor
        setVal(_val_);

    }

    @Override
    public Object clone()
    {
        return new AValCall(
            cloneNode(this._val_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAValCall(this);
    }

    public PVal getVal()
    {
        return this._val_;
    }

    public void setVal(PVal node)
    {
        if(this._val_ != null)
        {
            this._val_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._val_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._val_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._val_ == child)
        {
            this._val_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._val_ == oldChild)
        {
            setVal((PVal) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
