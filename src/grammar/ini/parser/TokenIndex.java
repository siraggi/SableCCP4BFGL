/* This file was generated by SableCC (http://www.sablecc.org/). */

package grammar.ini.parser;

import grammar.ini.node.*;
import grammar.ini.analysis.*;

class TokenIndex extends AnalysisAdapter
{
    int index;

    @Override
    public void caseTNum(@SuppressWarnings("unused") TNum node)
    {
        this.index = 0;
    }

    @Override
    public void caseTBool(@SuppressWarnings("unused") TBool node)
    {
        this.index = 1;
    }

    @Override
    public void caseTList(@SuppressWarnings("unused") TList node)
    {
        this.index = 2;
    }

    @Override
    public void caseTText(@SuppressWarnings("unused") TText node)
    {
        this.index = 3;
    }

    @Override
    public void caseTWhile(@SuppressWarnings("unused") TWhile node)
    {
        this.index = 4;
    }

    @Override
    public void caseTFor(@SuppressWarnings("unused") TFor node)
    {
        this.index = 5;
    }

    @Override
    public void caseTBegin(@SuppressWarnings("unused") TBegin node)
    {
        this.index = 6;
    }

    @Override
    public void caseTEnd(@SuppressWarnings("unused") TEnd node)
    {
        this.index = 7;
    }

    @Override
    public void caseTDo(@SuppressWarnings("unused") TDo node)
    {
        this.index = 8;
    }

    @Override
    public void caseTIf(@SuppressWarnings("unused") TIf node)
    {
        this.index = 9;
    }

    @Override
    public void caseTThen(@SuppressWarnings("unused") TThen node)
    {
        this.index = 10;
    }

    @Override
    public void caseTElse(@SuppressWarnings("unused") TElse node)
    {
        this.index = 11;
    }

    @Override
    public void caseTOr(@SuppressWarnings("unused") TOr node)
    {
        this.index = 12;
    }

    @Override
    public void caseTAnd(@SuppressWarnings("unused") TAnd node)
    {
        this.index = 13;
    }

    @Override
    public void caseTSet(@SuppressWarnings("unused") TSet node)
    {
        this.index = 14;
    }

    @Override
    public void caseTDcl(@SuppressWarnings("unused") TDcl node)
    {
        this.index = 15;
    }

    @Override
    public void caseTOf(@SuppressWarnings("unused") TOf node)
    {
        this.index = 16;
    }

    @Override
    public void caseTTo(@SuppressWarnings("unused") TTo node)
    {
        this.index = 17;
    }

    @Override
    public void caseTNew(@SuppressWarnings("unused") TNew node)
    {
        this.index = 18;
    }

    @Override
    public void caseTFunc(@SuppressWarnings("unused") TFunc node)
    {
        this.index = 19;
    }

    @Override
    public void caseTEclass(@SuppressWarnings("unused") TEclass node)
    {
        this.index = 20;
    }

    @Override
    public void caseTMain(@SuppressWarnings("unused") TMain node)
    {
        this.index = 21;
    }

    @Override
    public void caseTUpto(@SuppressWarnings("unused") TUpto node)
    {
        this.index = 22;
    }

    @Override
    public void caseTDownto(@SuppressWarnings("unused") TDownto node)
    {
        this.index = 23;
    }

    @Override
    public void caseTBoolval(@SuppressWarnings("unused") TBoolval node)
    {
        this.index = 24;
    }

    @Override
    public void caseTIs(@SuppressWarnings("unused") TIs node)
    {
        this.index = 25;
    }

    @Override
    public void caseTComma(@SuppressWarnings("unused") TComma node)
    {
        this.index = 26;
    }

    @Override
    public void caseTDot(@SuppressWarnings("unused") TDot node)
    {
        this.index = 27;
    }

    @Override
    public void caseTEquals(@SuppressWarnings("unused") TEquals node)
    {
        this.index = 28;
    }

    @Override
    public void caseTNotequals(@SuppressWarnings("unused") TNotequals node)
    {
        this.index = 29;
    }

    @Override
    public void caseTGreater(@SuppressWarnings("unused") TGreater node)
    {
        this.index = 30;
    }

    @Override
    public void caseTLess(@SuppressWarnings("unused") TLess node)
    {
        this.index = 31;
    }

    @Override
    public void caseTGreaterequals(@SuppressWarnings("unused") TGreaterequals node)
    {
        this.index = 32;
    }

    @Override
    public void caseTLessequals(@SuppressWarnings("unused") TLessequals node)
    {
        this.index = 33;
    }

    @Override
    public void caseTNot(@SuppressWarnings("unused") TNot node)
    {
        this.index = 34;
    }

    @Override
    public void caseTTreturn(@SuppressWarnings("unused") TTreturn node)
    {
        this.index = 35;
    }

    @Override
    public void caseTMinus(@SuppressWarnings("unused") TMinus node)
    {
        this.index = 36;
    }

    @Override
    public void caseTPlus(@SuppressWarnings("unused") TPlus node)
    {
        this.index = 37;
    }

    @Override
    public void caseTDivide(@SuppressWarnings("unused") TDivide node)
    {
        this.index = 38;
    }

    @Override
    public void caseTMult(@SuppressWarnings("unused") TMult node)
    {
        this.index = 39;
    }

    @Override
    public void caseTMod(@SuppressWarnings("unused") TMod node)
    {
        this.index = 40;
    }

    @Override
    public void caseTLparen(@SuppressWarnings("unused") TLparen node)
    {
        this.index = 41;
    }

    @Override
    public void caseTRparen(@SuppressWarnings("unused") TRparen node)
    {
        this.index = 42;
    }

    @Override
    public void caseTNumval(@SuppressWarnings("unused") TNumval node)
    {
        this.index = 43;
    }

    @Override
    public void caseTNewline(@SuppressWarnings("unused") TNewline node)
    {
        this.index = 44;
    }

    @Override
    public void caseTId(@SuppressWarnings("unused") TId node)
    {
        this.index = 45;
    }

    @Override
    public void caseTTextval(@SuppressWarnings("unused") TTextval node)
    {
        this.index = 46;
    }

    @Override
    public void caseEOF(@SuppressWarnings("unused") EOF node)
    {
        this.index = 47;
    }
}
